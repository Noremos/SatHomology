# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  PROJECT_FILE_PATH: GeoBar.vcxproj
  BUILD_PLATFORM: x64

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
        token: ${{ secrets.BARTOKEN }}

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup vcpkg
      uses: lukka/run-vcpkg@main
      id: runvcpkg
      with:
        vcpkgGitCommitId: '${{ matrix.vcpkgCommitId }}'
        # Run vcpkg with the command specified by the `runVcpkgFormatString` input.
        runVcpkgInstall: true
        doNotCache: false

    - name: Prints output of run-vcpkg's action.
      run: echo "root='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}', triplet='${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_DEFAULT_TRIPLET_OUT }}' "

    - name: Integrate vcpkg
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: vcpkg integrate install

    - name: List $RUNNER_WORKSPACE before build
      run: find $RUNNER_WORKSPACE
      shell: bash

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} ${{env.PROJECT_FILE_PATH}}

    - name: Build-2
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # needs: [Build]
      # if: failure()
      if: always()
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Platform=${{env.BUILD_PLATFORM}} ${{env.PROJECT_FILE_PATH}}

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: SatHomology
        # A file, directory or wildcard pattern that describes what to upload
        path: Build/Release
        # The desired behavior if no files are found using the provided path.
        retention-days: 10
